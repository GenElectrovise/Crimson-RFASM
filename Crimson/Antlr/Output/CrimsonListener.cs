//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Input/Crimson.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Crimson.AntlrBuild {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CrimsonParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface ICrimsonListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] CrimsonParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] CrimsonParser.CompilationUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.packageDefinitionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageDefinitionList([NotNull] CrimsonParser.PackageDefinitionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.packageDefinitionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageDefinitionList([NotNull] CrimsonParser.PackageDefinitionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.packageDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageDefinition([NotNull] CrimsonParser.PackageDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.packageDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageDefinition([NotNull] CrimsonParser.PackageDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.packageDependencyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageDependencyList([NotNull] CrimsonParser.PackageDependencyListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.packageDependencyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageDependencyList([NotNull] CrimsonParser.PackageDependencyListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.packageDependency"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageDependency([NotNull] CrimsonParser.PackageDependencyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.packageDependency"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageDependency([NotNull] CrimsonParser.PackageDependencyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.packageBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageBody([NotNull] CrimsonParser.PackageBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.packageBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageBody([NotNull] CrimsonParser.PackageBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelStatement([NotNull] CrimsonParser.TopLevelStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelStatement([NotNull] CrimsonParser.TopLevelStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.globalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariableDeclaration([NotNull] CrimsonParser.GlobalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.globalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariableDeclaration([NotNull] CrimsonParser.GlobalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] CrimsonParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] CrimsonParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] CrimsonParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] CrimsonParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionOnlyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionOnlyStatement([NotNull] CrimsonParser.FunctionOnlyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionOnlyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionOnlyStatement([NotNull] CrimsonParser.FunctionOnlyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.internalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternalVariableDeclaration([NotNull] CrimsonParser.InternalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.internalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternalVariableDeclaration([NotNull] CrimsonParser.InternalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignVariable([NotNull] CrimsonParser.AssignVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignVariable([NotNull] CrimsonParser.AssignVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] CrimsonParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] CrimsonParser.IfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] CrimsonParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] CrimsonParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.elifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElifBlock([NotNull] CrimsonParser.ElifBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.elifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElifBlock([NotNull] CrimsonParser.ElifBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseBlock([NotNull] CrimsonParser.ElseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseBlock([NotNull] CrimsonParser.ElseBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] CrimsonParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] CrimsonParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.inputParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputParameters([NotNull] CrimsonParser.InputParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.inputParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputParameters([NotNull] CrimsonParser.InputParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.allocateMemory"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocateMemory([NotNull] CrimsonParser.AllocateMemoryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.allocateMemory"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocateMemory([NotNull] CrimsonParser.AllocateMemoryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionReturn([NotNull] CrimsonParser.FunctionReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionReturn([NotNull] CrimsonParser.FunctionReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResolvableValue([NotNull] CrimsonParser.ResolvableValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResolvableValue([NotNull] CrimsonParser.ResolvableValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] CrimsonParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] CrimsonParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] CrimsonParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] CrimsonParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.structureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureDeclaration([NotNull] CrimsonParser.StructureDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.structureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureDeclaration([NotNull] CrimsonParser.StructureDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.structureBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureBody([NotNull] CrimsonParser.StructureBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.structureBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureBody([NotNull] CrimsonParser.StructureBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CrimsonParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CrimsonParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] CrimsonParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] CrimsonParser.ArrayContext context);
}
} // namespace Crimson.AntlrBuild
