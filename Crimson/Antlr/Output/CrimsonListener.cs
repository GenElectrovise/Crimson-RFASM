//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Input/Crimson.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Crimson.AntlrBuild {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CrimsonParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface ICrimsonListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslationUnit([NotNull] CrimsonParser.TranslationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslationUnit([NotNull] CrimsonParser.TranslationUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.importUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportUnit([NotNull] CrimsonParser.ImportUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.importUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportUnit([NotNull] CrimsonParser.ImportUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>GlobalVariableUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariableUnitStatement([NotNull] CrimsonParser.GlobalVariableUnitStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GlobalVariableUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariableUnitStatement([NotNull] CrimsonParser.GlobalVariableUnitStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionUnitStatement([NotNull] CrimsonParser.FunctionUnitStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionUnitStatement([NotNull] CrimsonParser.FunctionUnitStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructureUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureUnitStatement([NotNull] CrimsonParser.StructureUnitStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructureUnitStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.globalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureUnitStatement([NotNull] CrimsonParser.StructureUnitStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.globalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariableDeclaration([NotNull] CrimsonParser.GlobalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.globalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariableDeclaration([NotNull] CrimsonParser.GlobalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] CrimsonParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] CrimsonParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] CrimsonParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] CrimsonParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionVariableDeclarationStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionVariableDeclarationStatement([NotNull] CrimsonParser.FunctionVariableDeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionVariableDeclarationStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionVariableDeclarationStatement([NotNull] CrimsonParser.FunctionVariableDeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionReturnStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionReturnStatement([NotNull] CrimsonParser.FunctionReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionReturnStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionReturnStatement([NotNull] CrimsonParser.FunctionReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionAssignVariableStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionAssignVariableStatement([NotNull] CrimsonParser.FunctionAssignVariableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionAssignVariableStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionAssignVariableStatement([NotNull] CrimsonParser.FunctionAssignVariableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionFunctionCallStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionFunctionCallStatement([NotNull] CrimsonParser.FunctionFunctionCallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionFunctionCallStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionFunctionCallStatement([NotNull] CrimsonParser.FunctionFunctionCallStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionIfStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionIfStatement([NotNull] CrimsonParser.FunctionIfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionIfStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionIfStatement([NotNull] CrimsonParser.FunctionIfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionAssemblyCallStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionAssemblyCallStatement([NotNull] CrimsonParser.FunctionAssemblyCallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionAssemblyCallStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.internalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionAssemblyCallStatement([NotNull] CrimsonParser.FunctionAssemblyCallStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.internalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternalVariableDeclaration([NotNull] CrimsonParser.InternalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.internalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternalVariableDeclaration([NotNull] CrimsonParser.InternalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignVariableDirect</c>
	/// labeled alternative in <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignVariableDirect([NotNull] CrimsonParser.AssignVariableDirectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignVariableDirect</c>
	/// labeled alternative in <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignVariableDirect([NotNull] CrimsonParser.AssignVariableDirectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignVariableAtPointer</c>
	/// labeled alternative in <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignVariableAtPointer([NotNull] CrimsonParser.AssignVariableAtPointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignVariableAtPointer</c>
	/// labeled alternative in <see cref="CrimsonParser.assignVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignVariableAtPointer([NotNull] CrimsonParser.AssignVariableAtPointerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] CrimsonParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] CrimsonParser.IfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] CrimsonParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] CrimsonParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfBlock([NotNull] CrimsonParser.ElseIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfBlock([NotNull] CrimsonParser.ElseIfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseBlock([NotNull] CrimsonParser.ElseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseBlock([NotNull] CrimsonParser.ElseBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.assemblyCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssemblyCall([NotNull] CrimsonParser.AssemblyCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.assemblyCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssemblyCall([NotNull] CrimsonParser.AssemblyCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] CrimsonParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] CrimsonParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] CrimsonParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] CrimsonParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.functionReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionReturn([NotNull] CrimsonParser.FunctionReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.functionReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionReturn([NotNull] CrimsonParser.FunctionReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierResolvableValueStatement([NotNull] CrimsonParser.IdentifierResolvableValueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierResolvableValueStatement([NotNull] CrimsonParser.IdentifierResolvableValueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberResolvableValueStatement([NotNull] CrimsonParser.NumberResolvableValueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberResolvableValueStatement([NotNull] CrimsonParser.NumberResolvableValueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionCallResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallResolvableValueStatement([NotNull] CrimsonParser.FunctionCallResolvableValueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionCallResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallResolvableValueStatement([NotNull] CrimsonParser.FunctionCallResolvableValueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NullResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullResolvableValueStatement([NotNull] CrimsonParser.NullResolvableValueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NullResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullResolvableValueStatement([NotNull] CrimsonParser.NullResolvableValueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanResolvableValueStatement([NotNull] CrimsonParser.BooleanResolvableValueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanResolvableValueStatement</c>
	/// labeled alternative in <see cref="CrimsonParser.resolvableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanResolvableValueStatement([NotNull] CrimsonParser.BooleanResolvableValueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] CrimsonParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] CrimsonParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] CrimsonParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] CrimsonParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.structureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureDeclaration([NotNull] CrimsonParser.StructureDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.structureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureDeclaration([NotNull] CrimsonParser.StructureDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.structureBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureBody([NotNull] CrimsonParser.StructureBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.structureBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureBody([NotNull] CrimsonParser.StructureBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CrimsonParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CrimsonParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.rawType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRawType([NotNull] CrimsonParser.RawTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.rawType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRawType([NotNull] CrimsonParser.RawTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrimsonParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] CrimsonParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrimsonParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] CrimsonParser.ArrayContext context);
}
} // namespace Crimson.AntlrBuild
